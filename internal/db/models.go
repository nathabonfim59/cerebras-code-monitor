// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"time"
)

type Alert struct {
	ID             int64      `json:"id"`
	Timestamp      time.Time  `json:"timestamp"`
	OrganizationID string     `json:"organization_id"`
	ModelName      string     `json:"model_name"`
	AlertType      string     `json:"alert_type"`
	Severity       string     `json:"severity"`
	MetricName     string     `json:"metric_name"`
	MetricValue    float64    `json:"metric_value"`
	ThresholdValue float64    `json:"threshold_value"`
	Message        *string    `json:"message"`
	Acknowledged   *bool      `json:"acknowledged"`
	AcknowledgedAt *time.Time `json:"acknowledged_at"`
}

type BaselineAverage struct {
	ID                   int64     `json:"id"`
	OrganizationID       string    `json:"organization_id"`
	ModelName            string    `json:"model_name"`
	TimeWindow           string    `json:"time_window"`
	AvgTokensPerPeriod   *float64  `json:"avg_tokens_per_period"`
	AvgRequestsPerPeriod *float64  `json:"avg_requests_per_period"`
	AvgBurnRateTokens    *float64  `json:"avg_burn_rate_tokens"`
	StdDeviationTokens   *float64  `json:"std_deviation_tokens"`
	StdDeviationRequests *float64  `json:"std_deviation_requests"`
	SampleCount          *int64    `json:"sample_count"`
	LastUpdated          time.Time `json:"last_updated"`
	PeriodDays           *int64    `json:"period_days"`
}

type SchemaMigration struct {
	Version string `json:"version"`
}

type UsageMetric struct {
	ID                  int64     `json:"id"`
	Timestamp           time.Time `json:"timestamp"`
	OrganizationID      string    `json:"organization_id"`
	ModelName           string    `json:"model_name"`
	TimeWindow          string    `json:"time_window"`
	TotalTokensUsed     *int64    `json:"total_tokens_used"`
	TotalRequestsUsed   *int64    `json:"total_requests_used"`
	AvgBurnRateTokens   *float64  `json:"avg_burn_rate_tokens"`
	PeakBurnRateTokens  *float64  `json:"peak_burn_rate_tokens"`
	AvgBurnRateRequests *float64  `json:"avg_burn_rate_requests"`
	IsAboveAverage      *bool     `json:"is_above_average"`
	DeviationPercentage *float64  `json:"deviation_percentage"`
	SnapshotCount       *int64    `json:"snapshot_count"`
}

type UsageMetricsArchive struct {
	ID                  int64     `json:"id"`
	Timestamp           time.Time `json:"timestamp"`
	OrganizationID      string    `json:"organization_id"`
	ModelName           string    `json:"model_name"`
	TimeWindow          string    `json:"time_window"`
	TotalTokensUsed     *int64    `json:"total_tokens_used"`
	TotalRequestsUsed   *int64    `json:"total_requests_used"`
	AvgBurnRateTokens   *float64  `json:"avg_burn_rate_tokens"`
	PeakBurnRateTokens  *float64  `json:"peak_burn_rate_tokens"`
	AvgBurnRateRequests *float64  `json:"avg_burn_rate_requests"`
	IsAboveAverage      *bool     `json:"is_above_average"`
	DeviationPercentage *float64  `json:"deviation_percentage"`
	SnapshotCount       *int64    `json:"snapshot_count"`
}

type UsageSnapshot struct {
	ID                   int64     `json:"id"`
	Timestamp            time.Time `json:"timestamp"`
	OrganizationID       string    `json:"organization_id"`
	ModelName            string    `json:"model_name"`
	TokensUsed           *int64    `json:"tokens_used"`
	TokensLimit          *int64    `json:"tokens_limit"`
	TokensRemaining      *int64    `json:"tokens_remaining"`
	RequestsUsed         *int64    `json:"requests_used"`
	RequestsLimit        *int64    `json:"requests_limit"`
	RequestsRemaining    *int64    `json:"requests_remaining"`
	ResetRequestsSeconds *int64    `json:"reset_requests_seconds"`
	ResetTokensSeconds   *int64    `json:"reset_tokens_seconds"`
	DataSource           string    `json:"data_source"`
	IsComplete           *bool     `json:"is_complete"`
}
